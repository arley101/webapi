# /home/site/wwwroot/oryx-manifest.toml

# Especifica el nombre del entorno virtual que Oryx debe buscar o crear.
# Asegúrate de que coincida con lo que la plataforma está intentando usar.
virtualEnvName = "antenv"

# Descomenta la siguiente línea si quieres que Oryx use explícitamente este comando de inicio.
# Sin embargo, el "Comando de inicio" configurado en el Portal de Azure usualmente tiene prioridad.
# Si el del portal es el mismo, esto actúa como un buen fallback o confirmación.
# startupCommand = "gunicorn -w 4 -k uvicorn.workers.UvicornWorker app.main:app --timeout 120"

# Opcional: Indica a Oryx que no cree la carpeta __oryx_packages__ y que
# confíe completamente en el entorno virtual 'antenv'.
# Esto puede ayudar si hay conflictos entre el venv y los paquetes precompilados de Oryx.
# Descomentar si sigues viendo warnings sobre __oryx_packages__ o problemas de rutas.
# disable_collect_static = true # El nombre exacto de esta opción puede ser 'disableCollectStatic' o similar
                                # o a veces se maneja con 'PRESERVE_PYTHON_PKGS_PATH=true' como variable de entorno.
                                # Por ahora, mantenlo comentado a menos que sea estrictamente necesario.

# Puedes especificar explícitamente la versión de Python si quieres asegurar
# que Oryx use la misma que tienes en el portal.
# pythonVersion = "3.11"