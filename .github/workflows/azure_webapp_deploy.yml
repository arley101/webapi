name: Deploy Python App to Azure App Service - EliteDynamicsAPI

on:
  push:
    branches: [production]
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

env:
  AZURE_WEBAPP_NAME: elitedynamicsapi
  PYTHON_VERSION: '3.11'
  AZURE_RESOURCE_GROUP: 'Memorycognitiva'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Azure Login
      uses: azure/login@v2
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    - name: Clear Oryx cache and manifest
      run: |
        echo "üî• Clearing Oryx cache and manifest..."
        
        # Delete old oryx-manifest.toml from server
        az webapp deployment source delete \
          --name ${{ env.AZURE_WEBAPP_NAME }} \
          --resource-group ${{ env.AZURE_RESOURCE_GROUP }}
        
        # Force Oryx to rebuild from scratch
        az webapp config appsettings set \
          --resource-group ${{ env.AZURE_RESOURCE_GROUP }} \
          --name ${{ env.AZURE_WEBAPP_NAME }} \
          --settings "SCM_BUILD_ARGS=--no-cache" "BUILD_FLAGS=--disable-oryx-cache"
        
        echo "‚úÖ Cache clearing completed"

    - name: Validate critical files
      run: |
        echo "üìã Validating critical files..."
        ls -la app/actions/gemini_actions.py
        ls -la app/core/action_mapper.py
        
        if grep -q "gemini_suggest_action" app/core/action_mapper.py; then
          echo "‚úÖ gemini_suggest_action found in action_mapper!"
        else
          echo "‚ùå gemini_suggest_action NOT in action_mapper!"
          exit 1
        fi

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Deploy to Azure Web App (Fresh Build)
      uses: azure/webapps-deploy@v3
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        package: '.'
        clean: true

    - name: Validate deployment
      run: |
        echo "‚è≥ Waiting for fresh deployment..."
        sleep 120  # Extra time for full rebuild
        
        echo "üîç Testing gemini_suggest_action..."
        response=$(curl -s -X POST https://${{ env.AZURE_WEBAPP_NAME }}.azurewebsites.net/api/v1/dynamics \
          -H "Content-Type: application/json" \
          -d '{"action": "gemini_suggest_action", "params": {"query": "test"}}')
        
        echo "Response: $response"
        
        if echo "$response" | grep -q "no encontrada"; then
          echo "‚ùå ORYX CACHE ISSUE PERSISTS"
          exit 1
        else
          echo "‚úÖ SUCCESS - gemini_suggest_action is working!"
        fi