name: Deploy Python App to Azure App Service - EliteDynamicsAPI

on:
  push:
    branches: [production]
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

env:
  AZURE_WEBAPP_NAME: elitedynamicsapi
  PYTHON_VERSION: '3.11'
  AZURE_RESOURCE_GROUP: 'Memorycognitiva'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Clean requirements and validate files
      run: |
        # Remove enum34 if it exists
        grep -v "enum34" requirements.txt > requirements_clean.txt || cp requirements.txt requirements_clean.txt
        mv requirements_clean.txt requirements.txt
        
        # Validate critical files exist
        echo "üìã Validating critical files..."
        ls -la app/actions/gemini_actions.py
        ls -la app/core/action_mapper.py
        
        # Check if gemini_suggest_action is in action_mapper
        grep -n "gemini_suggest_action" app/core/action_mapper.py || echo "‚ùå gemini_suggest_action NOT in action_mapper!"
        
        echo "‚úÖ Files validated"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        echo "‚úÖ Dependencies installed"

    - name: Prepare clean deployment package
      run: |
        # Remove all cache and temp files
        find . -name "*.pyc" -delete
        find . -name "__pycache__" -type d -exec rm -rf {} + || true
        rm -rf .pytest_cache .mypy_cache .coverage htmlcov
        
        # Remove any existing deployment artifacts
        rm -f deployment.zip oryx-manifest.toml
        
        # List files that will be deployed
        echo "üì¶ Files to be deployed:"
        find . -name "*.py" | grep -E "(gemini_actions|action_mapper)" | head -10
        
        echo "‚úÖ Package prepared"

    - name: Azure Login
      uses: azure/login@v2
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    - name: Deploy to Azure Web App (Clean Deploy)
      uses: azure/webapps-deploy@v3
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        package: '.'
        clean: true

    - name: Wait and validate deployment
      run: |
        echo "‚è≥ Waiting for deployment to complete..."
        sleep 60
        
        echo "üîç Testing health endpoint..."
        for i in {1..5}; do
          if curl -f https://${{ env.AZURE_WEBAPP_NAME }}.azurewebsites.net/health; then
            echo "‚úÖ Health check passed on attempt $i"
            break
          else
            echo "‚è≥ Health check attempt $i failed, retrying in 15s..."
            sleep 15
          fi
        done
        
        echo "üîç Testing gemini_suggest_action function..."
        sleep 10
        curl -X POST https://${{ env.AZURE_WEBAPP_NAME }}.azurewebsites.net/api/v1/dynamics \
          -H "Content-Type: application/json" \
          -d '{"action": "gemini_suggest_action", "params": {"query": "test"}}' \
          || echo "‚ùå Function test failed - this might be expected if not yet available"
        
        echo "‚úÖ Deployment validation completed"